{"message":"unused import: `Ipv4Addr`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1189,"byte_end":1197,"line_start":30,"line_end":30,"column_start":24,"column_end":32,"is_primary":true,"text":[{"text":"use std::net::{IpAddr, Ipv4Addr};","highlight_start":24,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1187,"byte_end":1197,"line_start":30,"line_end":30,"column_start":22,"column_end":32,"is_primary":true,"text":[{"text":"use std::net::{IpAddr, Ipv4Addr};","highlight_start":22,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Ipv4Addr`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:30:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::net::{IpAddr, Ipv4Addr};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"no method named `get_source` found for enum `Option` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":1434,"byte_end":1444,"line_start":37,"line_end":37,"column_start":23,"column_end":33,"is_primary":true,"text":[{"text":"    let prt_srg = udp.get_source();","highlight_start":23,"highlight_end":33}],"label":"method not found in `Option<UdpPacket<'_>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the method `get_source` exists on the type `UdpPacket<'_>`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\udp.rs","byte_start":642,"byte_end":651,"line_start":23,"line_end":23,"column_start":1,"column_end":10,"is_primary":true,"text":[{"text":"#[packet]","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\udp.rs","byte_start":642,"byte_end":651,"line_start":23,"line_end":23,"column_start":1,"column_end":10,"is_primary":false,"text":[{"text":"#[packet]","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(::pnet_macros::Packet)]","def_site_span":{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_macros-0.31.0\\src\\lib.rs","byte_start":8745,"byte_end":8800,"line_start":152,"line_end":152,"column_start":1,"column_end":56,"is_primary":false,"text":[{"text":"pub fn derive_packet(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"consider using `Option::expect` to unwrap the `UdpPacket<'_>` value, panicking if the value is an `Option::None`","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1433,"byte_end":1433,"line_start":37,"line_end":37,"column_start":22,"column_end":22,"is_primary":true,"text":[{"text":"    let prt_srg = udp.get_source();","highlight_start":22,"highlight_end":22}],"label":null,"suggested_replacement":".expect(\"REASON\")","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `get_source` found for enum `Option` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:37:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let prt_srg = udp.get_source();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `Option<UdpPacket<'_>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the method `get_source` exists on the type `UdpPacket<'_>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\udp.rs:23:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[packet]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the derive macro `::pnet_macros::Packet` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider using `Option::expect` to unwrap the `UdpPacket<'_>` value, panicking if the value is an `Option::None`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let prt_srg = udp\u001b[0m\u001b[0m\u001b[38;5;10m.expect(\"REASON\")\u001b[0m\u001b[0m.get_source();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++\u001b[0m\n\n"}
{"message":"no method named `get_destination` found for enum `Option` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":1471,"byte_end":1486,"line_start":38,"line_end":38,"column_start":24,"column_end":39,"is_primary":true,"text":[{"text":"    let prt_dest = udp.get_destination();","highlight_start":24,"highlight_end":39}],"label":"method not found in `Option<UdpPacket<'_>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the method `get_destination` exists on the type `UdpPacket<'_>`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\udp.rs","byte_start":642,"byte_end":651,"line_start":23,"line_end":23,"column_start":1,"column_end":10,"is_primary":true,"text":[{"text":"#[packet]","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\udp.rs","byte_start":642,"byte_end":651,"line_start":23,"line_end":23,"column_start":1,"column_end":10,"is_primary":false,"text":[{"text":"#[packet]","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(::pnet_macros::Packet)]","def_site_span":{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_macros-0.31.0\\src\\lib.rs","byte_start":8745,"byte_end":8800,"line_start":152,"line_end":152,"column_start":1,"column_end":56,"is_primary":false,"text":[{"text":"pub fn derive_packet(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"consider using `Option::expect` to unwrap the `UdpPacket<'_>` value, panicking if the value is an `Option::None`","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1470,"byte_end":1470,"line_start":38,"line_end":38,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"    let prt_dest = udp.get_destination();","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":".expect(\"REASON\")","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `get_destination` found for enum `Option` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:38:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let prt_dest = udp.get_destination();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `Option<UdpPacket<'_>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the method `get_destination` exists on the type `UdpPacket<'_>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\udp.rs:23:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[packet]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the derive macro `::pnet_macros::Packet` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider using `Option::expect` to unwrap the `UdpPacket<'_>` value, panicking if the value is an `Option::None`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let prt_dest = udp\u001b[0m\u001b[0m\u001b[38;5;10m.expect(\"REASON\")\u001b[0m\u001b[0m.get_destination();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++\u001b[0m\n\n"}
{"message":"no method named `get_source` found for enum `Option` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":4111,"byte_end":4121,"line_start":115,"line_end":115,"column_start":23,"column_end":33,"is_primary":true,"text":[{"text":"    let prt_srg = tcp.get_source();","highlight_start":23,"highlight_end":33}],"label":"method not found in `Option<TcpPacket<'_>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the method `get_source` exists on the type `TcpPacket<'_>`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\tcp.rs","byte_start":2425,"byte_end":2434,"line_start":59,"line_end":59,"column_start":1,"column_end":10,"is_primary":true,"text":[{"text":"#[packet]","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\tcp.rs","byte_start":2425,"byte_end":2434,"line_start":59,"line_end":59,"column_start":1,"column_end":10,"is_primary":false,"text":[{"text":"#[packet]","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(::pnet_macros::Packet)]","def_site_span":{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_macros-0.31.0\\src\\lib.rs","byte_start":8745,"byte_end":8800,"line_start":152,"line_end":152,"column_start":1,"column_end":56,"is_primary":false,"text":[{"text":"pub fn derive_packet(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"consider using `Option::expect` to unwrap the `TcpPacket<'_>` value, panicking if the value is an `Option::None`","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":4110,"byte_end":4110,"line_start":115,"line_end":115,"column_start":22,"column_end":22,"is_primary":true,"text":[{"text":"    let prt_srg = tcp.get_source();","highlight_start":22,"highlight_end":22}],"label":null,"suggested_replacement":".expect(\"REASON\")","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `get_source` found for enum `Option` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:115:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let prt_srg = tcp.get_source();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `Option<TcpPacket<'_>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the method `get_source` exists on the type `TcpPacket<'_>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\tcp.rs:59:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m59\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[packet]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the derive macro `::pnet_macros::Packet` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider using `Option::expect` to unwrap the `TcpPacket<'_>` value, panicking if the value is an `Option::None`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let prt_srg = tcp\u001b[0m\u001b[0m\u001b[38;5;10m.expect(\"REASON\")\u001b[0m\u001b[0m.get_source();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++\u001b[0m\n\n"}
{"message":"no method named `get_destination` found for enum `Option` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":4148,"byte_end":4163,"line_start":116,"line_end":116,"column_start":24,"column_end":39,"is_primary":true,"text":[{"text":"    let prt_dest = tcp.get_destination();","highlight_start":24,"highlight_end":39}],"label":"method not found in `Option<TcpPacket<'_>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the method `get_destination` exists on the type `TcpPacket<'_>`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\tcp.rs","byte_start":2425,"byte_end":2434,"line_start":59,"line_end":59,"column_start":1,"column_end":10,"is_primary":true,"text":[{"text":"#[packet]","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\tcp.rs","byte_start":2425,"byte_end":2434,"line_start":59,"line_end":59,"column_start":1,"column_end":10,"is_primary":false,"text":[{"text":"#[packet]","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(::pnet_macros::Packet)]","def_site_span":{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_macros-0.31.0\\src\\lib.rs","byte_start":8745,"byte_end":8800,"line_start":152,"line_end":152,"column_start":1,"column_end":56,"is_primary":false,"text":[{"text":"pub fn derive_packet(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"consider using `Option::expect` to unwrap the `TcpPacket<'_>` value, panicking if the value is an `Option::None`","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":4147,"byte_end":4147,"line_start":116,"line_end":116,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"    let prt_dest = tcp.get_destination();","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":".expect(\"REASON\")","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `get_destination` found for enum `Option` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:116:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let prt_dest = tcp.get_destination();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `Option<TcpPacket<'_>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the method `get_destination` exists on the type `TcpPacket<'_>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\tcp.rs:59:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m59\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[packet]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the derive macro `::pnet_macros::Packet` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider using `Option::expect` to unwrap the `TcpPacket<'_>` value, panicking if the value is an `Option::None`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let prt_dest = tcp\u001b[0m\u001b[0m\u001b[38;5;10m.expect(\"REASON\")\u001b[0m\u001b[0m.get_destination();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++\u001b[0m\n\n"}
{"message":"no method named `get_source` found for enum `Option` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":5844,"byte_end":5854,"line_start":173,"line_end":173,"column_start":37,"column_end":47,"is_primary":true,"text":[{"text":"    let ip_sorg = IpAddr::V4(header.get_source());","highlight_start":37,"highlight_end":47}],"label":"method not found in `Option<Ipv4Packet<'_>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the method `get_source` exists on the type `Ipv4Packet<'_>`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\ipv4.rs","byte_start":3873,"byte_end":3882,"line_start":138,"line_end":138,"column_start":1,"column_end":10,"is_primary":true,"text":[{"text":"#[packet]","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\ipv4.rs","byte_start":3873,"byte_end":3882,"line_start":138,"line_end":138,"column_start":1,"column_end":10,"is_primary":false,"text":[{"text":"#[packet]","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(::pnet_macros::Packet)]","def_site_span":{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_macros-0.31.0\\src\\lib.rs","byte_start":8745,"byte_end":8800,"line_start":152,"line_end":152,"column_start":1,"column_end":56,"is_primary":false,"text":[{"text":"pub fn derive_packet(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"consider using `Option::expect` to unwrap the `Ipv4Packet<'_>` value, panicking if the value is an `Option::None`","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":5843,"byte_end":5843,"line_start":173,"line_end":173,"column_start":36,"column_end":36,"is_primary":true,"text":[{"text":"    let ip_sorg = IpAddr::V4(header.get_source());","highlight_start":36,"highlight_end":36}],"label":null,"suggested_replacement":".expect(\"REASON\")","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `get_source` found for enum `Option` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:173:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let ip_sorg = IpAddr::V4(header.get_source());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `Option<Ipv4Packet<'_>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the method `get_source` exists on the type `Ipv4Packet<'_>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\ipv4.rs:138:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[packet]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the derive macro `::pnet_macros::Packet` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider using `Option::expect` to unwrap the `Ipv4Packet<'_>` value, panicking if the value is an `Option::None`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let ip_sorg = IpAddr::V4(header\u001b[0m\u001b[0m\u001b[38;5;10m.expect(\"REASON\")\u001b[0m\u001b[0m.get_source());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++\u001b[0m\n\n"}
{"message":"no method named `get_destination` found for enum `Option` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":5895,"byte_end":5910,"line_start":174,"line_end":174,"column_start":37,"column_end":52,"is_primary":true,"text":[{"text":"    let ip_dest = IpAddr::V4(header.get_destination());","highlight_start":37,"highlight_end":52}],"label":"method not found in `Option<Ipv4Packet<'_>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the method `get_destination` exists on the type `Ipv4Packet<'_>`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\ipv4.rs","byte_start":3873,"byte_end":3882,"line_start":138,"line_end":138,"column_start":1,"column_end":10,"is_primary":true,"text":[{"text":"#[packet]","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\ipv4.rs","byte_start":3873,"byte_end":3882,"line_start":138,"line_end":138,"column_start":1,"column_end":10,"is_primary":false,"text":[{"text":"#[packet]","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(::pnet_macros::Packet)]","def_site_span":{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_macros-0.31.0\\src\\lib.rs","byte_start":8745,"byte_end":8800,"line_start":152,"line_end":152,"column_start":1,"column_end":56,"is_primary":false,"text":[{"text":"pub fn derive_packet(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"consider using `Option::expect` to unwrap the `Ipv4Packet<'_>` value, panicking if the value is an `Option::None`","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":5894,"byte_end":5894,"line_start":174,"line_end":174,"column_start":36,"column_end":36,"is_primary":true,"text":[{"text":"    let ip_dest = IpAddr::V4(header.get_destination());","highlight_start":36,"highlight_end":36}],"label":null,"suggested_replacement":".expect(\"REASON\")","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `get_destination` found for enum `Option` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:174:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let ip_dest = IpAddr::V4(header.get_destination());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `Option<Ipv4Packet<'_>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the method `get_destination` exists on the type `Ipv4Packet<'_>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\ipv4.rs:138:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[packet]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the derive macro `::pnet_macros::Packet` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider using `Option::expect` to unwrap the `Ipv4Packet<'_>` value, panicking if the value is an `Option::None`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let ip_dest = IpAddr::V4(header\u001b[0m\u001b[0m\u001b[38;5;10m.expect(\"REASON\")\u001b[0m\u001b[0m.get_destination());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++\u001b[0m\n\n"}
{"message":"no method named `get_source` found for enum `Option` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":6504,"byte_end":6514,"line_start":192,"line_end":192,"column_start":37,"column_end":47,"is_primary":true,"text":[{"text":"    let ip_sorg = IpAddr::V6(header.get_source());","highlight_start":37,"highlight_end":47}],"label":"method not found in `Option<Ipv6Packet<'_>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the method `get_source` exists on the type `Ipv6Packet<'_>`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\ipv6.rs","byte_start":597,"byte_end":606,"line_start":21,"line_end":21,"column_start":1,"column_end":10,"is_primary":true,"text":[{"text":"#[packet]","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\ipv6.rs","byte_start":597,"byte_end":606,"line_start":21,"line_end":21,"column_start":1,"column_end":10,"is_primary":false,"text":[{"text":"#[packet]","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(::pnet_macros::Packet)]","def_site_span":{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_macros-0.31.0\\src\\lib.rs","byte_start":8745,"byte_end":8800,"line_start":152,"line_end":152,"column_start":1,"column_end":56,"is_primary":false,"text":[{"text":"pub fn derive_packet(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"consider using `Option::expect` to unwrap the `Ipv6Packet<'_>` value, panicking if the value is an `Option::None`","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":6503,"byte_end":6503,"line_start":192,"line_end":192,"column_start":36,"column_end":36,"is_primary":true,"text":[{"text":"    let ip_sorg = IpAddr::V6(header.get_source());","highlight_start":36,"highlight_end":36}],"label":null,"suggested_replacement":".expect(\"REASON\")","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `get_source` found for enum `Option` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:192:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let ip_sorg = IpAddr::V6(header.get_source());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `Option<Ipv6Packet<'_>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the method `get_source` exists on the type `Ipv6Packet<'_>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\ipv6.rs:21:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[packet]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the derive macro `::pnet_macros::Packet` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider using `Option::expect` to unwrap the `Ipv6Packet<'_>` value, panicking if the value is an `Option::None`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let ip_sorg = IpAddr::V6(header\u001b[0m\u001b[0m\u001b[38;5;10m.expect(\"REASON\")\u001b[0m\u001b[0m.get_source());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++\u001b[0m\n\n"}
{"message":"no method named `get_destination` found for enum `Option` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":6555,"byte_end":6570,"line_start":193,"line_end":193,"column_start":37,"column_end":52,"is_primary":true,"text":[{"text":"    let ip_dest = IpAddr::V6(header.get_destination());","highlight_start":37,"highlight_end":52}],"label":"method not found in `Option<Ipv6Packet<'_>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the method `get_destination` exists on the type `Ipv6Packet<'_>`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\ipv6.rs","byte_start":597,"byte_end":606,"line_start":21,"line_end":21,"column_start":1,"column_end":10,"is_primary":true,"text":[{"text":"#[packet]","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\ipv6.rs","byte_start":597,"byte_end":606,"line_start":21,"line_end":21,"column_start":1,"column_end":10,"is_primary":false,"text":[{"text":"#[packet]","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(::pnet_macros::Packet)]","def_site_span":{"file_name":"C:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_macros-0.31.0\\src\\lib.rs","byte_start":8745,"byte_end":8800,"line_start":152,"line_end":152,"column_start":1,"column_end":56,"is_primary":false,"text":[{"text":"pub fn derive_packet(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"consider using `Option::expect` to unwrap the `Ipv6Packet<'_>` value, panicking if the value is an `Option::None`","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":6554,"byte_end":6554,"line_start":193,"line_end":193,"column_start":36,"column_end":36,"is_primary":true,"text":[{"text":"    let ip_dest = IpAddr::V6(header.get_destination());","highlight_start":36,"highlight_end":36}],"label":null,"suggested_replacement":".expect(\"REASON\")","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `get_destination` found for enum `Option` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:193:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let ip_dest = IpAddr::V6(header.get_destination());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `Option<Ipv6Packet<'_>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the method `get_destination` exists on the type `Ipv6Packet<'_>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\patri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pnet_packet-0.31.0\\src\\ipv6.rs:21:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[packet]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the derive macro `::pnet_macros::Packet` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider using `Option::expect` to unwrap the `Ipv6Packet<'_>` value, panicking if the value is an `Option::None`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let ip_dest = IpAddr::V6(header\u001b[0m\u001b[0m\u001b[38;5;10m.expect(\"REASON\")\u001b[0m\u001b[0m.get_destination());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++\u001b[0m\n\n"}
{"message":"attempted to take value of method `len` on type `&[u8]`","code":{"code":"E0615","explanation":"Attempted to access a method like a field.\n\nErroneous code example:\n\n```compile_fail,E0615\nstruct Foo {\n    x: u32,\n}\n\nimpl Foo {\n    fn method(&self) {}\n}\n\nlet f = Foo { x: 0 };\nf.method; // error: attempted to take value of method `method` on type `Foo`\n```\n\nIf you want to use a method, add `()` after it:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nf.method();\n```\n\nHowever, if you wanted to access a field of a struct check that the field name\nis spelled correctly. Example:\n\n```\n# struct Foo { x: u32 }\n# impl Foo { fn method(&self) {} }\n# let f = Foo { x: 0 };\nprintln!(\"{}\", f.x);\n```\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":7677,"byte_end":7680,"line_start":229,"line_end":229,"column_start":60,"column_end":63,"is_primary":true,"text":[{"text":"    PacketInfo::set_dim(new_packet_info, ethernet.packet().len);","highlight_start":60,"highlight_end":63}],"label":"method, not a field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use parentheses to call the method","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":7680,"byte_end":7680,"line_start":229,"line_end":229,"column_start":63,"column_end":63,"is_primary":true,"text":[{"text":"    PacketInfo::set_dim(new_packet_info, ethernet.packet().len);","highlight_start":63,"highlight_end":63}],"label":null,"suggested_replacement":"()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0615]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: attempted to take value of method `len` on type `&[u8]`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:229:60\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m229\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PacketInfo::set_dim(new_packet_info, ethernet.packet().len);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod, not a field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use parentheses to call the method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m229\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    PacketInfo::set_dim(new_packet_info, ethernet.packet().len\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                               \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"unused import: `Write`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1158,"byte_end":1163,"line_start":29,"line_end":29,"column_start":21,"column_end":26,"is_primary":true,"text":[{"text":"use std::io::{self, Write};","highlight_start":21,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Write`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:29:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{self, Write};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\n\n"}
{"message":"aborting due to 9 previous errors; 2 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 9 previous errors; 2 warnings emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0599, E0615.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0599, E0615.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0599`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0599`.\u001b[0m\n"}
